// Copyright (c) 2022 The ZMK Contributors
// SPDX-License-Identifier: MIT

#define ZMK_MOUSE_DEFAULT_MOVE_VAL 2500  // 600
#define ZMK_MOUSE_DEFAULT_SCRL_VAL 20    // 10

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/mouse.h>

#define DEF 0
#define NUM 1
#define SYM 2
#define NAV 3
#define TRI 4
#define MOUSE 5

/ {
    chosen {
        zmk,charmap = &charmap_us;
    };
    behaviors {
        ht: hold_tap {
            label = "hold_tap";
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <220>;
            quick-tap-ms = <150>;
            global-quick-tap;
            bindings = <&kp>, <&kp>;
        };
        mmv {
            acceleration-exponent = <1>;      // 1
            time-to-max-speed-ms = <300>;    // 40
            delay-ms = <0>;                   // 0
        };
        msc {
            acceleration-exponent = <0>;      // 0
            time-to-max-speed-ms = <40>;      // 500
            delay-ms = <0>;                   // 10
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        tri_layer {
            if-layers = <NUM SYM>;
            then-layer = <TRI>;
        };
    };fd

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q  &kp W       &kp E        &kp R        &kp T              &kp Y      &kp U        &kp I        &kp O       &kp P
&lt SYM A  &ht LALT S  &ht LCTRL D  &lt NUM F   &ht LGUI G       &ht RGUI H      &ht RSHIFT J   &ht RCTRL K  &ht RALT L  &kp BSPC
&lt MOUSE Z  &kp X       &kp C        &kp V        &kp B              &kp N      &kp M        &kp COMMA    &kp DOT     &kp ENTER
                                &lt NAV TAB  &kp LSHIFT         &kp SPACE &kp TAB
            >;
        };

        number_layer {
            bindings = <
&none   &none    &none     &none   &none                &kp EQUAL  &kp N7    &kp N8     &kp N9     &none
&trans  &kp LALT  &kp LCTRL  &trans  &kp LGUI        &kp MINUS  &kp N4   &kp N5  &kp N6 &none
&none   &none    &none     &none   &none                &kp FSLH  &kp N1  &kp N2  &kp N3 &kp ENTER 
                              &none   &kp LSHIFT             &kp N0  &kp DOT
            >;
        };

        symbol_layer {
            bindings = <
&none   &none    &none     &none   &none                &kp EQUAL  &kp LPAR    &kp RPAR     &kp BACKSLASH     &kp PIPE
&trans  &kp LALT  &kp LCTRL  &kp LSHIFT  &kp LGUI      &kp MINUS  &kp LBRC   &kp RBRC  &kp SQT &kp SEMICOLON
&none   &none    &none     &none   &none                &kp FSLH  &kp LBKT  &kp RBKT  &kp N3 &bootloader 
                              &none   &none             &kp LT  &kp GT
            >;
        };

        navigation_layer {
            bindings = <
&none   &none    &none     &none   &none                   &kp ESC  &kp HOME    &kp UP     &kp END     &kp DEL
&trans  &kp LALT  &kp LCTRL  &kp LSHIFT  &kp LGUI         &none  &kp LEFT   &kp DOWN  &kp RIGHT &none
&none   &none    &none     &none   &none                   &none  &none  &none  &none &none 
                              &none   &none                &kp PG_DN  &kp PG_UP
            >;
        };

        tri_layer {
            bindings = <
&kp F1  &kp F2   &kp F3   &kp F4   &bt BT_SEL 0    &bt BT_SEL 2  &out OUT_TOG   &none  &kp C_MUTE    &kp C_PREV
&kp F5  &kp F6   &kp F7   &kp F8   &bt BT_SEL 1    &bt BT_SEL 3  &kp C_BRI_UP   &studio_unlock    &kp C_VOL_UP  &kp C_PP
&kp F9  &kp F10  &kp F11  &kp F12  &bt BT_CLR      &bt BT_SEL 4  &kp C_BRI_DEC  &trans    &kp C_VOL_DN  &kp C_NEXT
                          &trans   &trans          &trans        &trans
            >;
        };

        mouse {
            bindings = <
&tog MOUSE  &mkp MB4  &mkp MCLK  &mkp MB5   &trans      &msc SCRL_UP     &msc SCRL_LEFT    &msc MOVE_UP     &msc SCRL_RIGHT    &tog MOUSE
&trans      &trans    &trans     &trans     &trans      &mmv SCRL_DOWN     &mmv MOVE_LEFT    &mmv MOVE_DOWN     &mmv MOVE_RIGHT    &trans
&trans      &trans    &trans     &trans     &trans      &trans     &mkp MB4  &mkp MCLK  &mkp MB5  &trans
                                 &kp SPACE  &kp LSHIFT  &mkp LCLK  &mkp RCLK
            >;
        };
    };
};
